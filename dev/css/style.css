@charset "UTF-8";
/*
 * Table of contents   Содержание
 *
 *  0. Imports
 *  1. General Vars, Mixins, Extends

 *  14.
 *
 */
/*
Move 
/font-awesome/css
/font-awesome/webfonts
to
/fonts/
*/
/*
 * 1. Import url (form DNS)
 * 2. Font-face mixin
 * 3. Adding by Font-face
 *
*/
@import url("https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700&subset=cyrillic");
@font-face {
  font-family: "myfont";
  src: url("fonts/myfont.eot?") format("eot"), url("fonts/myfont.woff2") format("woff2"), url("fonts/myfont.woff") format("woff"), url("fonts/myfont.ttf") format("truetype"), url("fonts/myfont.svg#myfont") format("svg"); }

/*
* Options
* 1. Structure elements 
* 2. Modules display
* 3. Columns
* 4. Auxiliary elements
* 5. Collapse 
* 6. Responsive utilites
* 7. Text utulites
* 8. SCSS utulites
*   8.1 Functions
*   8.1 Mixins
*/
/*
Add $columns gap in devices for each device,
in all slectors where using $columns_gap use column gap from devices
in default $devices add global $columns_gap
*/
/* Options: */
@media (min-width: 320px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 576px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 768px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 1024px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

@media (min-width: 1440px) {
  .container {
    padding-left: 15px;
    padding-right: 15px; }
  .row,
  .row-line,
  .row-flex {
    margin-left: -15px;
    margin-right: -15px; }
  [class*="mv_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="mh_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="tb_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="ds_"] {
    padding-left: 15px;
    padding-right: 15px; }
  [class*="hd_"] {
    padding-left: 15px;
    padding-right: 15px; } }

/* 1. Structure elements */
.section {
  float: left;
  width: 100%;
  clear: both; }

.container {
  max-width: 1400px;
  margin: 0 auto;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  position: relative; }

.container-elastic {
  max-width: none; }

/* 2. Modules display */
/*
Modules have:
    vertical aligment ( .middle, etc.. )
    reverse order ( .row-reverse )
*/
/* Block  model */
.row > div {
  float: left; }

.row.reverse > div,
.row.row-reverse > div {
  float: right; }

/* Inline-block  model */
/* Flex  model */
.row-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.row-flexbox {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

[class*=row-flex].middle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

[class*=row-flex].top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

[class*=row-flex].bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end; }

[class*=row-flex].baseline {
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline; }

[class*=row-flex].stretch {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

.row-flex.row-reverse,
.row-flex.reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse; }

/* 3. Columns */
/* 3. Columns v.2 */
[class*="mv_"], [class*="mh_"], [class*="tb_"], [class*="ds_"], [class*="hd_"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  position: relative;
  min-height: 1px; }

@media (min-width: 320px) {
  .mv_offset_0 {
    margin-left: 0; }
  .mv_1 {
    width: 8.33333%; }
  .mv_offset_1 {
    margin-left: 8.33333%; }
  .mv_2 {
    width: 16.66667%; }
  .mv_offset_2 {
    margin-left: 16.66667%; }
  .mv_3 {
    width: 25%; }
  .mv_offset_3 {
    margin-left: 25%; }
  .mv_4 {
    width: 33.33333%; }
  .mv_offset_4 {
    margin-left: 33.33333%; }
  .mv_5 {
    width: 41.66667%; }
  .mv_offset_5 {
    margin-left: 41.66667%; }
  .mv_6 {
    width: 50%; }
  .mv_offset_6 {
    margin-left: 50%; }
  .mv_7 {
    width: 58.33333%; }
  .mv_offset_7 {
    margin-left: 58.33333%; }
  .mv_8 {
    width: 66.66667%; }
  .mv_offset_8 {
    margin-left: 66.66667%; }
  .mv_9 {
    width: 75%; }
  .mv_offset_9 {
    margin-left: 75%; }
  .mv_10 {
    width: 83.33333%; }
  .mv_offset_10 {
    margin-left: 83.33333%; }
  .mv_11 {
    width: 91.66667%; }
  .mv_offset_11 {
    margin-left: 91.66667%; }
  .mv_12 {
    width: 100%; }
  .mv_offset_12 {
    margin-left: 100%; }
  .mv_order_1 {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1; }
  .mv_order_2 {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .mv_order_3 {
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  .mv_order_4 {
    -webkit-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  .mv_order_5 {
    -webkit-box-ordinal-group: 6;
        -ms-flex-order: 5;
            order: 5; }
  .mv_order_6 {
    -webkit-box-ordinal-group: 7;
        -ms-flex-order: 6;
            order: 6; }
  .mv_order_7 {
    -webkit-box-ordinal-group: 8;
        -ms-flex-order: 7;
            order: 7; }
  .mv_order_8 {
    -webkit-box-ordinal-group: 9;
        -ms-flex-order: 8;
            order: 8; }
  .mv_order_9 {
    -webkit-box-ordinal-group: 10;
        -ms-flex-order: 9;
            order: 9; }
  .mv_order_10 {
    -webkit-box-ordinal-group: 11;
        -ms-flex-order: 10;
            order: 10; }
  .mv_order_11 {
    -webkit-box-ordinal-group: 12;
        -ms-flex-order: 11;
            order: 11; }
  .mv_order_12 {
    -webkit-box-ordinal-group: 13;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 576px) {
  .mh_offset_0 {
    margin-left: 0; }
  .mh_1 {
    width: 8.33333%; }
  .mh_offset_1 {
    margin-left: 8.33333%; }
  .mh_2 {
    width: 16.66667%; }
  .mh_offset_2 {
    margin-left: 16.66667%; }
  .mh_3 {
    width: 25%; }
  .mh_offset_3 {
    margin-left: 25%; }
  .mh_4 {
    width: 33.33333%; }
  .mh_offset_4 {
    margin-left: 33.33333%; }
  .mh_5 {
    width: 41.66667%; }
  .mh_offset_5 {
    margin-left: 41.66667%; }
  .mh_6 {
    width: 50%; }
  .mh_offset_6 {
    margin-left: 50%; }
  .mh_7 {
    width: 58.33333%; }
  .mh_offset_7 {
    margin-left: 58.33333%; }
  .mh_8 {
    width: 66.66667%; }
  .mh_offset_8 {
    margin-left: 66.66667%; }
  .mh_9 {
    width: 75%; }
  .mh_offset_9 {
    margin-left: 75%; }
  .mh_10 {
    width: 83.33333%; }
  .mh_offset_10 {
    margin-left: 83.33333%; }
  .mh_11 {
    width: 91.66667%; }
  .mh_offset_11 {
    margin-left: 91.66667%; }
  .mh_12 {
    width: 100%; }
  .mh_offset_12 {
    margin-left: 100%; }
  .mh_order_1 {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1; }
  .mh_order_2 {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .mh_order_3 {
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  .mh_order_4 {
    -webkit-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  .mh_order_5 {
    -webkit-box-ordinal-group: 6;
        -ms-flex-order: 5;
            order: 5; }
  .mh_order_6 {
    -webkit-box-ordinal-group: 7;
        -ms-flex-order: 6;
            order: 6; }
  .mh_order_7 {
    -webkit-box-ordinal-group: 8;
        -ms-flex-order: 7;
            order: 7; }
  .mh_order_8 {
    -webkit-box-ordinal-group: 9;
        -ms-flex-order: 8;
            order: 8; }
  .mh_order_9 {
    -webkit-box-ordinal-group: 10;
        -ms-flex-order: 9;
            order: 9; }
  .mh_order_10 {
    -webkit-box-ordinal-group: 11;
        -ms-flex-order: 10;
            order: 10; }
  .mh_order_11 {
    -webkit-box-ordinal-group: 12;
        -ms-flex-order: 11;
            order: 11; }
  .mh_order_12 {
    -webkit-box-ordinal-group: 13;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 768px) {
  .tb_offset_0 {
    margin-left: 0; }
  .tb_1 {
    width: 8.33333%; }
  .tb_offset_1 {
    margin-left: 8.33333%; }
  .tb_2 {
    width: 16.66667%; }
  .tb_offset_2 {
    margin-left: 16.66667%; }
  .tb_3 {
    width: 25%; }
  .tb_offset_3 {
    margin-left: 25%; }
  .tb_4 {
    width: 33.33333%; }
  .tb_offset_4 {
    margin-left: 33.33333%; }
  .tb_5 {
    width: 41.66667%; }
  .tb_offset_5 {
    margin-left: 41.66667%; }
  .tb_6 {
    width: 50%; }
  .tb_offset_6 {
    margin-left: 50%; }
  .tb_7 {
    width: 58.33333%; }
  .tb_offset_7 {
    margin-left: 58.33333%; }
  .tb_8 {
    width: 66.66667%; }
  .tb_offset_8 {
    margin-left: 66.66667%; }
  .tb_9 {
    width: 75%; }
  .tb_offset_9 {
    margin-left: 75%; }
  .tb_10 {
    width: 83.33333%; }
  .tb_offset_10 {
    margin-left: 83.33333%; }
  .tb_11 {
    width: 91.66667%; }
  .tb_offset_11 {
    margin-left: 91.66667%; }
  .tb_12 {
    width: 100%; }
  .tb_offset_12 {
    margin-left: 100%; }
  .tb_order_1 {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1; }
  .tb_order_2 {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .tb_order_3 {
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  .tb_order_4 {
    -webkit-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  .tb_order_5 {
    -webkit-box-ordinal-group: 6;
        -ms-flex-order: 5;
            order: 5; }
  .tb_order_6 {
    -webkit-box-ordinal-group: 7;
        -ms-flex-order: 6;
            order: 6; }
  .tb_order_7 {
    -webkit-box-ordinal-group: 8;
        -ms-flex-order: 7;
            order: 7; }
  .tb_order_8 {
    -webkit-box-ordinal-group: 9;
        -ms-flex-order: 8;
            order: 8; }
  .tb_order_9 {
    -webkit-box-ordinal-group: 10;
        -ms-flex-order: 9;
            order: 9; }
  .tb_order_10 {
    -webkit-box-ordinal-group: 11;
        -ms-flex-order: 10;
            order: 10; }
  .tb_order_11 {
    -webkit-box-ordinal-group: 12;
        -ms-flex-order: 11;
            order: 11; }
  .tb_order_12 {
    -webkit-box-ordinal-group: 13;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 1024px) {
  .ds_offset_0 {
    margin-left: 0; }
  .ds_1 {
    width: 8.33333%; }
  .ds_offset_1 {
    margin-left: 8.33333%; }
  .ds_2 {
    width: 16.66667%; }
  .ds_offset_2 {
    margin-left: 16.66667%; }
  .ds_3 {
    width: 25%; }
  .ds_offset_3 {
    margin-left: 25%; }
  .ds_4 {
    width: 33.33333%; }
  .ds_offset_4 {
    margin-left: 33.33333%; }
  .ds_5 {
    width: 41.66667%; }
  .ds_offset_5 {
    margin-left: 41.66667%; }
  .ds_6 {
    width: 50%; }
  .ds_offset_6 {
    margin-left: 50%; }
  .ds_7 {
    width: 58.33333%; }
  .ds_offset_7 {
    margin-left: 58.33333%; }
  .ds_8 {
    width: 66.66667%; }
  .ds_offset_8 {
    margin-left: 66.66667%; }
  .ds_9 {
    width: 75%; }
  .ds_offset_9 {
    margin-left: 75%; }
  .ds_10 {
    width: 83.33333%; }
  .ds_offset_10 {
    margin-left: 83.33333%; }
  .ds_11 {
    width: 91.66667%; }
  .ds_offset_11 {
    margin-left: 91.66667%; }
  .ds_12 {
    width: 100%; }
  .ds_offset_12 {
    margin-left: 100%; }
  .ds_order_1 {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1; }
  .ds_order_2 {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .ds_order_3 {
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  .ds_order_4 {
    -webkit-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  .ds_order_5 {
    -webkit-box-ordinal-group: 6;
        -ms-flex-order: 5;
            order: 5; }
  .ds_order_6 {
    -webkit-box-ordinal-group: 7;
        -ms-flex-order: 6;
            order: 6; }
  .ds_order_7 {
    -webkit-box-ordinal-group: 8;
        -ms-flex-order: 7;
            order: 7; }
  .ds_order_8 {
    -webkit-box-ordinal-group: 9;
        -ms-flex-order: 8;
            order: 8; }
  .ds_order_9 {
    -webkit-box-ordinal-group: 10;
        -ms-flex-order: 9;
            order: 9; }
  .ds_order_10 {
    -webkit-box-ordinal-group: 11;
        -ms-flex-order: 10;
            order: 10; }
  .ds_order_11 {
    -webkit-box-ordinal-group: 12;
        -ms-flex-order: 11;
            order: 11; }
  .ds_order_12 {
    -webkit-box-ordinal-group: 13;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 1440px) {
  .hd_offset_0 {
    margin-left: 0; }
  .hd_1 {
    width: 8.33333%; }
  .hd_offset_1 {
    margin-left: 8.33333%; }
  .hd_2 {
    width: 16.66667%; }
  .hd_offset_2 {
    margin-left: 16.66667%; }
  .hd_3 {
    width: 25%; }
  .hd_offset_3 {
    margin-left: 25%; }
  .hd_4 {
    width: 33.33333%; }
  .hd_offset_4 {
    margin-left: 33.33333%; }
  .hd_5 {
    width: 41.66667%; }
  .hd_offset_5 {
    margin-left: 41.66667%; }
  .hd_6 {
    width: 50%; }
  .hd_offset_6 {
    margin-left: 50%; }
  .hd_7 {
    width: 58.33333%; }
  .hd_offset_7 {
    margin-left: 58.33333%; }
  .hd_8 {
    width: 66.66667%; }
  .hd_offset_8 {
    margin-left: 66.66667%; }
  .hd_9 {
    width: 75%; }
  .hd_offset_9 {
    margin-left: 75%; }
  .hd_10 {
    width: 83.33333%; }
  .hd_offset_10 {
    margin-left: 83.33333%; }
  .hd_11 {
    width: 91.66667%; }
  .hd_offset_11 {
    margin-left: 91.66667%; }
  .hd_12 {
    width: 100%; }
  .hd_offset_12 {
    margin-left: 100%; }
  .hd_order_1 {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1; }
  .hd_order_2 {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .hd_order_3 {
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  .hd_order_4 {
    -webkit-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  .hd_order_5 {
    -webkit-box-ordinal-group: 6;
        -ms-flex-order: 5;
            order: 5; }
  .hd_order_6 {
    -webkit-box-ordinal-group: 7;
        -ms-flex-order: 6;
            order: 6; }
  .hd_order_7 {
    -webkit-box-ordinal-group: 8;
        -ms-flex-order: 7;
            order: 7; }
  .hd_order_8 {
    -webkit-box-ordinal-group: 9;
        -ms-flex-order: 8;
            order: 8; }
  .hd_order_9 {
    -webkit-box-ordinal-group: 10;
        -ms-flex-order: 9;
            order: 9; }
  .hd_order_10 {
    -webkit-box-ordinal-group: 11;
        -ms-flex-order: 10;
            order: 10; }
  .hd_order_11 {
    -webkit-box-ordinal-group: 12;
        -ms-flex-order: 11;
            order: 11; }
  .hd_order_12 {
    -webkit-box-ordinal-group: 13;
        -ms-flex-order: 12;
            order: 12; } }

/* 4. Auxiliary elements (Вспомогательные структурные элементы) */
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " ";
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.container:after,
.row:after {
  clear: both; }

/* 5. Collapse */
.collapse > [class*=row] > [class*="mv_"], .collapse > [class*=row] > [class*="mh_"], .collapse > [class*=row] > [class*="tb_"], .collapse > [class*=row] > [class*="ds_"], .collapse > [class*=row] > [class*="hd_"], [class*=row].collapse [class*="mv_"], [class*=row].collapse [class*="mh_"], [class*=row].collapse [class*="tb_"], [class*=row].collapse [class*="ds_"], [class*=row].collapse [class*="hd_"], [class*=row].collapse-this > [class*="mv_"], [class*=row].collapse-this > [class*="mh_"], [class*=row].collapse-this > [class*="tb_"], [class*=row].collapse-this > [class*="ds_"], [class*=row].collapse-this > [class*="hd_"] {
  padding-left: 0;
  padding-right: 0; }

.collapse {
  padding-left: 0;
  padding-right: 0; }
  .collapse > [class*=row] {
    margin-left: 0;
    margin-right: 0; }

[class*=row].collapse {
  margin-left: 0;
  margin-right: 0; }
  [class*=row].collapse [class*=row] {
    margin-left: 0;
    margin-right: 0; }

[class*=row].collapse-this {
  margin-left: 0;
  margin-right: 0; }

/* 6. Responsive utilites (Утилиты адаптации)  */
/* Hide on large, show on small (Скрываем на больших, на малых показываем) */
@media (min-width: 320px) {
  body .mv_hidden {
    display: none; } }

@media (max-width: 319px) {
  body .mv_visible {
    display: none; } }

@media (min-width: 576px) {
  body .mh_hidden {
    display: none; } }

@media (max-width: 575px) {
  body .mh_visible {
    display: none; } }

@media (min-width: 768px) {
  body .tb_hidden {
    display: none; } }

@media (max-width: 767px) {
  body .tb_visible {
    display: none; } }

@media (min-width: 1024px) {
  body .ds_hidden {
    display: none; } }

@media (max-width: 1023px) {
  body .ds_visible {
    display: none; } }

@media (min-width: 1440px) {
  body .hd_hidden {
    display: none; } }

@media (max-width: 1439px) {
  body .hd_visible {
    display: none; } }

/* 7. Text utulites  */
.lefted {
  text-align: left; }

.righted {
  text-align: right; }

.centered {
  text-align: center; }

.justifyed {
  text-align: justify; }

@media (min-width: 320px) {
  .mv_lefted {
    text-align: left; }
  .mv_righted {
    text-align: right; }
  .mv_centered {
    text-align: center; }
  .mv_justifyed {
    text-align: justify; } }

@media (min-width: 576px) {
  .mh_lefted {
    text-align: left; }
  .mh_righted {
    text-align: right; }
  .mh_centered {
    text-align: center; }
  .mh_justifyed {
    text-align: justify; } }

@media (min-width: 768px) {
  .tb_lefted {
    text-align: left; }
  .tb_righted {
    text-align: right; }
  .tb_centered {
    text-align: center; }
  .tb_justifyed {
    text-align: justify; } }

@media (min-width: 1024px) {
  .ds_lefted {
    text-align: left; }
  .ds_righted {
    text-align: right; }
  .ds_centered {
    text-align: center; }
  .ds_justifyed {
    text-align: justify; } }

@media (min-width: 1440px) {
  .hd_lefted {
    text-align: left; }
  .hd_righted {
    text-align: right; }
  .hd_centered {
    text-align: center; }
  .hd_justifyed {
    text-align: justify; } }

/* 8. SCSS Utulites  */
/* 8.1 Functions  */
/*
* 
* 1. get_grid_bp() - return breakpoint value from $devices
* 2. get_grid_c_m() - return container_max value from $devices
* 3. get_grid_f_b() - return font_base value from $devices
* 4. get_grid_ms_c() - return ms_coeff value from $devices
*
*/
/* 1.  get_grid_c_m($bp_name) - return breakpoint value from $devices */
/* 2. get_grid_c_m($bp_name) - return container_max value from $devices */
/* 3. get_grid_f_b($bp_name) - return font_base value from $devices */
/* 4. get_grid_ms_c($bp_name) - return ms_coeff value from $devices */
/* 5. get_grid_property($bp_name, $propery) - return specified property value $devies */
/* 8.2 Mixins  */
/*
* 
* 1. media-up()   - output @media expression (min-width)
* 2. media-down() - output @media expression (max-width)
* 3. media-only() - output @media expression (min-width) and (max-width)
*
*/
/* 1.  media-up($bp_name) - output @media expression up from breakpoint (min-width) */
/* 2.  media-down($bp_name) - output @media expression down from breakpoint (max-width) */
/* 3.  media-only($bp_name) - output @media expression up from breakpoint to the next breakpoint  (min-width) and (max-width) */
/*
 * 1. Colors
 * 2. Fonts
 * 3. Borders
 * 4. Z-index
 * 5. Animations
 * 
 * 
 * 
*/
/*
 * Variables
*/
/*
DOCSS - Design-orientired CSS
 
Make your code like design with design terms like:
    Color scheme
    Typographic scheme
    Vertical rhytm
    Horizontal rhytm
    Height leveling
*/
/*
 * 1. pseudoelement_left_top()
 * 2. pseudoelement_right_top()
 * 3. flex()
 * 4. width()
 * 5. height()
 * 6. image_center_cover
 * 7. image_center_contain
 * 8. text_overflow
 * 9. bg_clip_text
 * 10. text_vertical()
 * 11. set_bg_adaptive
 * 0.
 */
/*
 * Display 'flex' - set justify and aligment,
 * add set optionaly flex-direction and flex-wrap 
 * Call: // flex(space-between, center);
*/
/*
 * Set width properties - set width, min-width and max-width
 * Call: // width(auto, 200px, 100%);
*/
/*
 * Set height properties - set height, min-height adn max-height
 * Call: // height(auto, 200px, 100%);
*/
/*
 * Centered image in container like CSS cover
 * Call: // image_center_cover();
*/
/*
 * Centered image in container like CSS contain
 * Call: // image_center_contain();
*/
/*
 * Overflow text in element
 * Call: // text_overflow();
*/
/*
 * Set background clip text
 * Call: // bg_clip_text();
*/
/*
 * Set text wrigthing mode vertical, and align text
 * Call: // text_vertical(center, '', ttb);
*/
/*
 * Set adaptive bg-image
 * Call: // set_bg_adaptive('../images/section-main-bg', (768, 1200), 'jpg');
*/
/*

Obj $devices 
->
Obj $font_size_names
->
function set_font_sizes()
->
mixin font_size_pro()

*/
@media (min-width: 320px) {
  .my_head {
    font-size: 17px; } }

@media (min-width: 768px) {
  .my_head {
    font-size: 18px; } }

/*
 * Extends
*/
.modal {
  -webkit-box-shadow: 0 0 8px 0px rgba(53, 52, 55, 0.25);
          box-shadow: 0 0 8px 0px rgba(53, 52, 55, 0.25); }

.tabs__controls-button a {
  display: block;
  padding: 0.75em 2em;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.025em;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }

.product__quantity-button {
  -webkit-transition: all 0.25s;
  -o-transition: all 0.25s;
  transition: all 0.25s; }

.product__parameters-list li:before {
  border-radius: 50%; }

/*
 * .Base
 *
*/
/*
 * Base
*/
html {
  font-size: 14px;
  height: 100%; }

body {
  font-size: inherit;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  height: 100%;
  margin: 0;
  color: #353437; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

a {
  text-decoration: none; }

ul, ol {
  margin: 0;
  padding: 0;
  list-style: none; }

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  margin: 0;
  line-height: 1.2em;
  font-family: "Roboto", Tahoma, Arial, sans-serif;
  font-weight: 400;
  color: #353437; }

h1, .h1 {
  font-size: 2.00534rem;
  letter-spacing: 0.05em; }

h2, .h2 {
  font-size: 1.68516rem; }

h3, .h3 {
  font-size: 1.4161rem; }

h4, .h4 {
  font-size: 1.19rem; }

p {
  margin-top: 0;
  margin-bottom: 1em;
  font-size: 1rem;
  line-height: 1.5em;
  font-weight: 300; }

img {
  display: block;
  max-width: 100%;
  width: 100%;
  height: auto; }

code {
  background-color: rgba(0, 0, 0, 0.1); }

.themify:before,
.themify:after {
  vertical-align: middle;
  display: block; }

.section-component {
  margin: 3em 0; }

/*
 * .Base
 *
*/
/*
 
*/
/* B. Plugins
 * **********************************************************************
 *  
*/
/* . news
 * **********************************************************************
 *
*/
/*
 * Blocks vars
 * Block and elements styles
 * Other styles (Not block elems, but associated with it)
 * Media rules - Mobile First, use min-width
 * States
 */
.news__item {
  width: 100%; }
  .news__item-date {
    color: green; }

/*
 * Blocks vars
 * Block and elements styles
 * Other styles (Not block elems, but associated with it)
 * Media rules - Mobile First, use min-width
 * Default states
 */
.section-settings {
  padding-top: 3em;
  padding-bottom: 1.5em;
  background-color: #f5f4f5; }

.section-viewer {
  margin-top: 3em; }

.scale {
  padding: 1.5em 0; }
  .scale__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 1.5em 0;
    border: 1px solid #f5f4f5;
    border-width: 1px 0; }
    .scale__item-name-outer {
      padding-right: 20px; }
    .scale__item-name {
      width: 80px; }
    .scale__item-value-outer {
      padding-right: 40px; }
    .scale__item-value {
      width: 40px; }
    .scale__item-line-height-outer {
      padding-right: 20px; }
    .scale__item-line-height {
      height: 1.5em;
      width: 8px;
      background-color: rgba(36, 145, 221, 0.25); }
    .scale__item-text-outer {
      max-width: calc( 100% - (80px + 20px) - (40px + 40px) - (20px + 8px)); }
    .scale__item-text {
      line-height: 1.5em; }
    .scale__item .text {
      line-height: 1.5em;
      height: 1.5em;
      overflow: hidden;
      white-space: nowrap;
      -o-text-overflow: ellipsis;
         text-overflow: ellipsis; }

.blockname {
  display: none; }

.settings {
  padding-top: 1.5em;
  padding-bottom: 1.5em; }
  .settings__item {
    margin-bottom: 1.5em; }
    .settings__item-field .field-text {
      width: 60px;
      padding-left: 0.75em;
      padding-right: 0.75em; }
    .settings__item-field--w--double .field-text {
      width: 120px; }
    .settings__item-label {
      display: block;
      font-size: 1.19rem; }

select.select {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 15px;
  padding-right: 15px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  position: relative;
  padding-right: 2rem;
  color: #77757b;
  font-size: 1rem;
  line-height: 1.5em; }

.product {
  padding-left: 15px;
  padding-right: 15px; }
  .product__image {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    height: 220px; }
    .product__image img {
      width: auto;
      max-width: 80%;
      max-height: 80%; }
    .product__image:hover {
      opacity: 0.85; }
  .product__title {
    line-height: 1.2em;
    padding-top: 0.15em;
    padding-bottom: 0.15em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.19rem;
    font-weight: 400;
    color: #353437;
    display: block; }
    .product__title:hover {
      color: #1b72ae; }
  .product__parameters-list {
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1rem; }
    .product__parameters-list li {
      font-size: inherit;
      color: #77757b; }
      .product__parameters-list li:before {
        content: "";
        margin: 0 0.5em;
        width: 2px;
        height: 2px;
        background-color: #d6d5d7;
        display: inline-block;
        vertical-align: middle; }
  .product__code {
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 0.84034rem;
    font-size: 0.70616rem;
    font-weight: 400;
    color: #353437; }
    .product__code-value {
      font-weight: 300; }
  .product__price {
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.19rem;
    font-weight: bold;
    color: #353437; }
  .product__price-label {
    font-size: 0.84034rem;
    font-weight: 400;
    color: #353437; }
  .product__price-label-summary {
    font-weight: 500;
    letter-spacing: 0.025em;
    padding-right: 1.5em;
    font-size: 1.19rem;
    color: #353437; }
  .product__price--productfull {
    font-size: 1.4161rem; }
  .product__price--summary {
    color: #1b72ae; }
  .product__price-old {
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1rem;
    font-weight: 400;
    color: #77757b; }
    .product__price-old-value {
      position: relative; }
      .product__price-old-value:after {
        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        width: 100%;
        height: 1px;
        background-color: #77757b;
        -webkit-transform: rotate(-12deg);
            -ms-transform: rotate(-12deg);
                transform: rotate(-12deg); }
  .product__availability {
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 0.84034rem;
    font-weight: 400;
    color: #353437; }
    .product__availability-value {
      font-weight: 500;
      letter-spacing: 0.025em; }
      .product__availability-value--in-stock {
        color: #1b72ae; }
      .product__availability-value--awaiting {
        color: #fbaf1c; }
      .product__availability-value--none {
        color: #ae1b28; }
  .product__rating {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1rem;
    font-size: 0.84034rem; }
  .product__quantity-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .product__quantity-field {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .product__quantity-button {
    width: 2rem;
    height: 2rem;
    font-size: 0.70616rem;
    background-color: #e8e7e9;
    color: #77757b; }
    .product__quantity-button:hover {
      background-color: #2491dd;
      color: #ffffff; }
    .product__quantity-button i {
      font-size: 1rem; }
  .product__quantity-value {
    width: 3rem;
    height: 2rem;
    padding-left: 0 !important;
    padding-right: 0 !important;
    border: none !important;
    text-align: center; }

/*
 * Components
 *
*/
/*
 * 1. Buttons
 * 2. Forms elements
 * 3. Components 
*/
/*
 * 1. Buttons
*/
.button {
  display: inline-block;
  text-align: center;
  position: relative;
  overflow: hidden; }

.button-buy {
  width: 100%;
  max-width: 180px;
  padding: 0.5em 1em;
  background: #2491dd;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff; }
  .button-buy:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#2491dd));
    background: -o-linear-gradient(left, #1b72ae, #2491dd);
    background: linear-gradient(to right, #1b72ae, #2491dd);
    -webkit-transition: all 0.3s ease-in-out;
    -o-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-buy:hover:before, .button-buy.hover:before {
    margin-left: 0; }
  .button-buy:active:before, .button-buy.active:before {
    margin-left: 0;
    background: #1b72ae; }
  .button-buy:disabled, .button-buy.disabled {
    border-color: #9b999e;
    background: #d6d5d7;
    color: #9b999e; }
    .button-buy:disabled:before, .button-buy.disabled:before {
      margin-left: -100%; }
  .button-buy span {
    position: relative; }

.button--long {
  max-width: 240px; }

.button-buy--small {
  padding: 0 !important;
  display: block;
  font-size: 1rem;
  line-height: 1.5em;
  width: 2.625em;
  height: 2.625em; }
  .button-buy--small i {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    font-size: 1.19rem;
    position: absolute;
    z-index: 1000; }

.button-send {
  width: 100%;
  max-width: 180px;
  padding: 0.5em 1em;
  background: #5daee6;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff; }
  .button-send:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#5daee6));
    background: -o-linear-gradient(left, #1b72ae, #5daee6);
    background: linear-gradient(to right, #1b72ae, #5daee6);
    -webkit-transition: all 0.3s ease-in-out;
    -o-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-send:hover:before, .button-send.hover:before {
    margin-left: 0; }
  .button-send:active:before, .button-send.active:before {
    margin-left: 0;
    background: #1b72ae; }
  .button-send:disabled, .button-send.disabled {
    border-color: #9b999e;
    background: #d6d5d7;
    color: #9b999e; }
    .button-send:disabled:before, .button-send.disabled:before {
      margin-left: -100%; }
  .button-send span {
    position: relative; }

.button-callback {
  text-align: left;
  overflow: visible;
  padding-left: 2.25em;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.025em;
  background-color: #ffffff;
  color: #353437; }
  .button-callback i.themify {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 2rem;
    color: #000000; }
  .button-callback:hover {
    color: #1b72ae;
    text-decoration: underline;
    -webkit-text-decoration-style: dotted;
            text-decoration-style: dotted; }
    .button-callback:hover i.themify, .button-callback:hover a {
      color: #1b72ae; }

/* 
.button-filter{

    width: 100%;
    max-width: 180px;
    padding: $l_h / 3  1em;
    // padding: 0.5em  1em;
    // background: $accent;
    border: 1px solid $accent_dark;

    font-size: $fb;
    line-height: $l_h;
    letter-spacing: $l_s_big;
    color: $white;
    // color: transparent;

    background: linear-gradient(to right, $accent, $accent );
    transition: all 2s ease-in-out;

    &:hover,
    &.hover{

        background: linear-gradient(to right, $grey, $accent );

    }

    &:active,
    &.active{

        background: linear-gradient(to right, $grey, $grey );

    }


} */
/*
 * 2. Forms elements
*/
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield;
  /* Firefox */ }

button {
  border: none; }

input,
textarea {
  width: 100%;
  background-color: #ffffff;
  margin: 0;
  line-height: 1.5em;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  font-weight: 300; }

input.field-text {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 15px;
  padding-right: 15px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  max-width: 240px;
  font-size: 1rem;
  border: 1px solid #d6d5d7;
  color: #353437; }
  input.field-text:focus, input.field-text.focus {
    border-color: #2491dd;
    border-color: #2491dd; }
  input.field-text.error {
    border-color: #ae1b28;
    border-color: #ae1b28;
    background-color: rgba(174, 27, 40, 0.05); }

textarea.textarea {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 15px;
  padding-right: 15px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  max-width: 440px;
  min-height: 6em;
  resize: vertical;
  max-height: 50vh;
  font-size: 1rem;
  border: 1px solid #d6d5d7;
  color: #353437; }
  textarea.textarea:focus, textarea.textarea.focus {
    border-color: #2491dd;
    border-color: #2491dd; }

label,
.label {
  font-size: 0.84034rem;
  line-height: 1.5em; }

input[type="checkbox"] + label,
input.field-checkbox + label, input[type="radio"] + label,
input.field-radio + label {
  position: relative;
  padding-left: 2em; }
  input[type="checkbox"] + label:before,
  input.field-checkbox + label:before, input[type="radio"] + label:before,
  input.field-radio + label:before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 1em;
    height: 1em;
    border: 1px solid #2491dd; }
  input[type="checkbox"] + label:hover:before,
  input.field-checkbox + label:hover:before, input[type="radio"] + label:hover:before,
  input.field-radio + label:hover:before, input[type="checkbox"] + label.hover:before,
  input.field-checkbox + label.hover:before, input[type="radio"] + label.hover:before,
  input.field-radio + label.hover:before {
    border: 1px solid #1b72ae; }
  input[type="checkbox"] + label:checked:before,
  input.field-checkbox + label:checked:before, input[type="radio"] + label:checked:before,
  input.field-radio + label:checked:before, input[type="checkbox"] + label.checked:before,
  input.field-checkbox + label.checked:before, input[type="radio"] + label.checked:before,
  input.field-radio + label.checked:before {
    border: 1px solid #1b72ae;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#2491dd));
    background: -o-linear-gradient(left, #1b72ae, #2491dd);
    background: linear-gradient(to right, #1b72ae, #2491dd); }

input[type="checkbox"],
input.field-checkbox {
  opacity: 0.5;
  display: none; }
  input[type="checkbox"] + label,
  input.field-checkbox + label {
    display: block;
    font-size: 1rem;
    line-height: normal;
    /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);

            width: 1em;
            height: 1em;
            border: 1px solid $accent;
        }

        &:hover:before,
        &.hover:before {
            border: 1px solid $accent_dark;  
        }

        &:checked:before,
        &.checked:before {
            border: 1px solid $accent_dark;
            background: linear-gradient(to right, $accent_dark, $accent);    
        }  
 */ }
  input[type="checkbox"]:checked + label:before, input[type="checkbox"]:checked + label:before,
  input.field-checkbox:checked + label:before,
  input.field-checkbox:checked + label:before {
    border: 1px solid #1b72ae;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#2491dd));
    background: -o-linear-gradient(left, #1b72ae, #2491dd);
    background: linear-gradient(to right, #1b72ae, #2491dd); }

input[type="radio"],
input.field-radio {
  opacity: 0.5;
  display: none; }
  input[type="radio"] + label,
  input.field-radio + label {
    display: block;
    font-size: 1rem;
    line-height: normal;
    position: relative;
    padding-left: 2em;
    /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);

            width: 1em;
            height: 1em;
            border: 1px solid $accent;

            border-radius: 50%;
        }

        &:hover:before,
        &.hover:before {
            border: 1px solid $accent_dark;   
        }

        &:checked:before,
        &.checked:before {
            border: 1px solid $accent_dark;
            background: linear-gradient(to right, $accent_dark, $accent);    
        }        
 */ }
    input[type="radio"] + label:before,
    input.field-radio + label:before {
      border-radius: 50%; }
  input[type="radio"]:checked + label:before, input[type="radio"]:checked + label:before,
  input.field-radio:checked + label:before,
  input.field-radio:checked + label:before {
    border: 1px solid #1b72ae;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#2491dd));
    background: -o-linear-gradient(left, #1b72ae, #2491dd);
    background: linear-gradient(to right, #1b72ae, #2491dd); }

.form--inline {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  float: left;
  width: 100%; }
  .form--inline .form-outer {
    padding-left: 15px;
    padding-right: 15px; }

/*
 * 3. Components
*/
.select {
  max-width: 240px;
  border: 1px solid #2491dd;
  background-color: #fcfcfc; }
  .select__title {
    line-height: 1.5em;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 15px;
    padding-right: 15px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    position: relative;
    padding-right: 2rem;
    color: #77757b; }
    .select__title .themify {
      content: "";
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translateY(-50%) rotate(-90deg);
          -ms-transform: translateY(-50%) rotate(-90deg);
              transform: translateY(-50%) rotate(-90deg);
      font-size: 0.84034rem;
      color: #77757b;
      margin-right: 1rem; }
  .select__list-item {
    line-height: 1.5em;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 15px;
    padding-right: 15px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    color: #353437; }
    .select__list-item:hover, .select__list-item.hover {
      background: -webkit-gradient(linear, left top, right top, from(#2491dd), to(#5daee6));
      background: -o-linear-gradient(left, #2491dd, #5daee6);
      background: linear-gradient(to right, #2491dd, #5daee6);
      color: #ffffff; }
  .select--closed {
    border-color: #d6d5d7; }
  .select--closed .select__title .themify {
    -webkit-transform: translateY(-50%) rotate(90deg);
        -ms-transform: translateY(-50%) rotate(90deg);
            transform: translateY(-50%) rotate(90deg); }
  .select--closed .select__list {
    display: none; }

.range {
  width: 100%;
  max-width: 200px;
  height: 4px;
  background-color: #d6d5d7; }
  .range__inputs {
    margin-top: 0.75em;
    margin-bottom: 0.75em; }
    .range__inputs-left, .range__inputs-right {
      float: left;
      width: 50%; }
  .range input.field-text {
    width: 80px;
    padding-left: 10px;
    padding-right: 10px; }
  .range__scale {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 2rem;
    position: relative;
    height: 4px;
    background-color: #2491dd; }
  .range__handle {
    position: relative;
    font-size: 1rem; }
    .range__handle--min {
      position: absolute;
      left: 0;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%); }
    .range__handle--max {
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translate(50%, -50%);
          -ms-transform: translate(50%, -50%);
              transform: translate(50%, -50%); }

.search {
  padding-right: 60px;
  position: relative; }
  .search__field {
    max-width: none !important; }
  .search__button {
    width: 60px;
    position: absolute;
    right: 0;
    top: 0; }

.button-search {
  padding: 0.5em 1em;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff;
  background: -webkit-gradient(linear, left top, right top, from(#2491dd), to(#2491dd));
  background: -o-linear-gradient(left, #2491dd, #2491dd);
  background: linear-gradient(to right, #2491dd, #2491dd); }
  .button-search:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: -webkit-gradient(linear, left top, right top, from(#1b72ae), to(#2491dd));
    background: -o-linear-gradient(left, #1b72ae, #2491dd);
    background: linear-gradient(to right, #1b72ae, #2491dd);
    -webkit-transition: all 0.3s ease-in-out;
    -o-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-search:hover:before, .button-search.hover:before {
    margin-left: 0; }
  .button-search .themify {
    position: relative;
    font-size: 1.19rem;
    z-index: zindex_icon; }

.button-menu .hamburger {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.button-menu {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 15px;
  padding-right: 15px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 50px;
  height: 50px;
  font-size: 1.19rem;
  background-color: #2491dd;
  border: 1px solid #d6d5d7;
  color: transparent; }

.button-close {
  width: 3em;
  height: 3em;
  background-color: #2491dd;
  cursor: pointer; }
  .button-close i {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    font-size: 125%;
    color: #ffffff; }
  .button-close:hover {
    background-color: #1b72ae; }

/* 19. rating
 * **********************************************************************
 *  
*/
.tabs {
  margin-bottom: 1.5em; }
  .tabs__controls {
    float: left;
    width: 100%; }
    .tabs__controls-button {
      background-color: #e8e7e9;
      color: #77757b;
      margin-right: 1px; }
      @media (min-width: (breakpoint: 768, container_max: 750, font_base: 15px, ms_coeff: 1.17) px) {
        .tabs__controls-button {
          float: left; } }
      .tabs__controls-button a {
        color: inherit; }
        .tabs__controls-button a:hover {
          background-color: #5daee6;
          color: #ffffff; }
    .tabs__controls-button.active a {
      background-color: #2491dd;
      color: #ffffff; }
  .tabs__content {
    float: left;
    width: 100%;
    border: 1px solid #f5f4f5; }
    .tabs__content-item {
      padding-left: 2rem;
      padding-right: 2rem;
      padding-top: 1.5em;
      padding-bottom: 1.5em;
      overflow: hidden; }

.js-tabs__content-item {
  display: none; }

.js-tabs__content-item.active {
  display: block; }

/* modals */
.overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(53, 52, 55, 0.95);
  z-index: 400; }
  .overlay-inner {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }

.modal {
  margin: 0 auto;
  width: 90%;
  background-color: #ffffff;
  position: relative;
  position: absolute;
  z-index: 400; }
  @media (min-width: (breakpoint: 1024, container_max: 960, font_base: 15px, ms_coeff: 1.17) px) {
    .modal {
      width: 100%;
      max-width: 600px; } }
  .modal__close {
    font-size: 1.19rem;
    content: "";
    position: absolute;
    right: 0;
    top: 0;
    height: 100%; }
  .modal-header {
    position: relative;
    padding: 0.75em 3em;
    border-bottom: 1px solid #e8e7e9;
    border-bottom: 1px solid #d6d5d7; }
  .modal-content {
    padding-left: 2rem;
    padding-right: 2rem; }
    @media (min-width: (breakpoint: 768, container_max: 750, font_base: 15px, ms_coeff: 1.17) px) {
      .modal-content {
        padding-left: 4rem;
        padding-right: 4rem; } }
  .modal__subtitle {
    font-size: 1.19rem;
    line-height: 1.5em;
    margin-top: 0.75em;
    margin-bottom: 0.75em; }
  .modal__form .field-outer {
    margin-top: 0.75em;
    margin-bottom: 0.75em; }
  .modal__form input.field-text {
    max-width: none; }
  .modal__form textarea {
    max-width: 100%; }
  .modal__form .button-send {
    margin-top: 0.75em;
    margin-bottom: 0.75em; }
  .modal-footer {
    padding: 0.75em 0; }
  .modal--subscribe {
    background: #ffffff url("../images/the-terminator-sarah-connor-robot-graphic--clean--reverse-x--muted.png") bottom 0 left -85px no-repeat;
    background-size: 50% auto; }
    .modal--subscribe:hover {
      background-image: url("../images/the-terminator-sarah-connor-robot-graphic--clean--reverse-x.png"); }
  .modal--subscribe .modal__slogan {
    padding: 1.5em 0;
    font-size: 1.4161rem;
    font-weight: bold;
    color: #353437;
    color: #545256; }
  .modal--subscribe .modal__subtitle {
    padding-top: 1.5em; }

.js-modal {
  display: none; }

/* 1. General, structure
 * **********************************************************************
 *  
*/
.main--sidebar--left {
  float: right; }

.main--sidebar--right {
  float: left; }

.main--sidebar--right + .sidebar {
  float: right; }

/* 2. Header
 * **********************************************************************
 *  
*/
.logo img {
  width: auto;
  max-width: 100%;
  height: auto; }

/* media end */
header {
  width: 100%;
  padding: 1rem  0;
  background-color: #fff;
  background-color: #2491dd; }

.title,
.logo {
  color: #000;
  color: #f5f4f5; }
  @media (min-width: 320px) {
    .title,
    .logo {
      font-size: 22px; } }
  @media (min-width: 768px) {
    .title,
    .logo {
      font-size: 28px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
